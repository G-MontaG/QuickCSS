{"version":3,"sources":["margins.scss","paddings.scss","center.scss","display.scss","border.scss"],"names":[],"mappings":"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","file":"quickcss.min.css","sourcesContent":["$i: $margin-min;\n@while $i <= $margin-max {\n  @if parse($i) == 0 {\n    .no-m { margin: $i !important; }\n    @each $mark, $side in (t: top, r: right, b: bottom, l: left) {\n      .no-m-#{$mark} { margin-#{$side}: $i !important; }\n    }\n    $i: $i + 1;\n  } @else if $i < 10 {\n    .m-#{parse($i)} { margin: $i; }\n    @each $mark, $side in (t: top, r: right, b: bottom, l: left) {\n      .m-#{$mark}-#{parse($i)} { margin-#{$side}: $i; }\n    }\n    $i: $i + 1;\n  } @else {\n    .m-#{parse($i)} { margin: $i; }\n    @each $mark, $side in (t: top, r: right, b: bottom, l: left) {\n      .m-#{$mark}-#{parse($i)} { margin-#{$side}: $i; }\n    }\n    $i: $i + $margin-step;\n  }\n}","$i: $padding-min;\n@while $i <= $padding-max {\n  @if parse($i) == 0 {\n    .no-p { padding: $i !important; }\n    @each $mark, $side in (t: top, r: right, b: bottom, l: left) {\n      .no-p-#{$mark} { padding-#{$side}: $i !important; }\n    }\n    $i: $i + 1;\n  } @else if $i < 10 {\n    .p-#{parse($i)} { padding: $i; }\n    @each $mark, $side in (t: top, r: right, b: bottom, l: left) {\n      .p-#{$mark}-#{parse($i)} { padding-#{$side}: $i; }\n    }\n    $i: $i + 1;\n  } @else {\n    .p-#{parse($i)} { padding: $i; }\n    @each $mark, $side in (t: top, r: right, b: bottom, l: left) {\n      .p-#{$mark}-#{parse($i)} { padding-#{$side}: $i; }\n    }\n    $i: $i + $padding-step;\n  }\n}","/*implement this for parent*/\n.center-parent {\n  position: relative;\n}\n\n/*centering with unknown dimensions*/\n/*implement this for child*/\n/*require for center-parent*/\n@mixin center-unknown {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.center-unknown {\n  @include center-unknown;\n}\n\n/*centering with known width*/\n/*implement this for child*/\n/*require for center-parent*/\n@mixin center-known-w ($width) {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: $width;\n  margin-left: -($width / 2);\n  transform: translateY(-50%);\n}\n\n@each $i in $center-width {\n  .center-known-w-#{parse($i)} {\n    @include center-known-w($i);\n  }\n}\n\n/*centering with known height*/\n/*implement this for child*/\n/*require for center-parent*/\n@mixin center-known-h ($height) {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  height: $height;\n  margin-top: -($height / 2);\n  transform: translateX(-50%);\n}\n\n@each $i in $center-height {\n  .center-known-h-#{parse($i)} {\n    @include center-known-h($i);\n  }\n}\n\n/*centering with known dimensions*/\n/*implement this for child*/\n/*require for center-parent*/\n@mixin center-known ($width, $height) {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: $width;\n  margin-left: -($width / 2);\n  height: $height;\n  margin-top: -($height / 2);\n}\n\n@each $w, $h in $center-width-height {\n  .center-known-#{parse($w)}-#{parse($h)} {\n    @include center-known($w, $h);\n  }\n}\n\n/*implement for parent*/\n/*don't require for center-parent*/\n.center-flex {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}","@each $mark, $prop in (block: block,\n                    inblock: inline-block,\n                    in: inline,\n                    flex: flex,\n                    inflex: inline-flex,\n                    inherit: inherit,\n                    none: none) {\n  .d-#{$mark} {\n    display: $prop;\n  }\n}\n\n.visible {\n  visibility: visible;\n}\n\n.invisible {\n  visibility: hidden;\n}","@each $mark, $color in $border-color {\n  .b-#{$mark} {\n    border-color: $color;\n  }\n}\n\n@each $mark, $side in (t: top, r: right, b: bottom, l: left) {\n  @each $type, $prop in $border  {\n    .b-#{$mark}-#{$type} {\n      border-#{$side}: $prop;\n    }\n  }\n}\n\n@each $mark in (tb, rl, all) {\n  @each $type, $prop in $border  {\n    .b-#{$mark}-#{$type} {\n      @if $mark == tb { border-top: $prop; border-bottom: $prop; }\n      @else if $mark == rl { border-right: $prop; border-left: $prop; }\n      @else { border: $prop; }\n    }\n  }\n}\n"],"sourceRoot":"/source/"}