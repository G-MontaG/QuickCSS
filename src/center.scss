/*implement this for parent*/
.center-parent {
  position: relative;
}

/*centering with unknown dimensions*/
/*implement this for child*/
/*require for center-parent*/
@mixin center-unknown {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.center-unknown {
  @include center-unknown;
}

/*centering with known width*/
/*implement this for child*/
/*require for center-parent*/
@mixin center-known-w ($width) {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $width;
  margin-left: -($width / 2);
  transform: translateY(-50%);
}

@each $i in $center-width {
  .center-known-w-#{parse($i)} {
    @include center-known-w($i);
  }
}

/*centering with known height*/
/*implement this for child*/
/*require for center-parent*/
@mixin center-known-h ($height) {
  position: absolute;
  top: 50%;
  left: 50%;
  height: $height;
  margin-top: -($height / 2);
  transform: translateX(-50%);
}

@each $i in $center-height {
  .center-known-h-#{parse($i)} {
    @include center-known-h($i);
  }
}

/*centering with known dimensions*/
/*implement this for child*/
/*require for center-parent*/
@mixin center-known ($width, $height) {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $width;
  margin-left: -($width / 2);
  height: $height;
  margin-top: -($height / 2);
}

@each $w, $h in $center-width-height {
  .center-known-#{parse($w)}-#{parse($h)} {
    @include center-known($w, $h);
  }
}

/*implement for parent*/
/*don't require for center-parent*/
.center-flex {
  display: flex;
  justify-content: center;
  align-items: center;
}