/* implement this for parent */
.center-parent {
  position: relative;
}

/* centering with unknown dimensions */
/* implement this for child */
/* require for center-parent */
@mixin center-child-unknown {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.center-child-unknown {
  @include center-child-unknown;
}

/* centering with known width */
/* implement this for child */
/* require for center-parent */
@mixin center-child-known-w ($width) {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $width;
  margin-left: -($width / 2);
  transform: translateY(-50%);
}

@each $i in $center-width {
  .center-child-known-w {
    @include center-child-known-w($i);
  }
}

/* centering with known height */
/* implement this for child */
/* require for center-parent */
@mixin center-child-known-h ($height) {
  position: absolute;
  top: 50%;
  left: 50%;
  height: $height;
  margin-top: -($height / 2);
  transform: translateX(-50%);
}

@each $i in $center-height {
  .center-child-known-h {
    @include center-child-known-h($i);
  }
}

/* centering with known dimensions */
/* implement this for child */
/* require for center-parent */
@mixin center-child-known ($width, $height) {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $width;
  margin-left: -($width / 2);
  height: $height;
  margin-top: -($height / 2);
}

@each $w, $h in $center-width-height {
  .center-child-known {
    @include center-child-known($w, $h);
  }
}

/* implement for parent */
/* don't require for center-parent */
.center-flex {
  display: flex;
  justify-content: center;
  align-items: center;
}